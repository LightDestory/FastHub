// Generated file do not edit, generated by io.requery.processor.EntityProcessor
package com.fastaccess.data.dao.model;

import android.os.Parcel;

import com.fastaccess.data.dao.ReleasesAssetsListModel;

import java.util.Date;

import javax.annotation.Generated;

import io.requery.Persistable;
import io.requery.meta.AttributeBuilder;
import io.requery.meta.NumericAttribute;
import io.requery.meta.QueryAttribute;
import io.requery.meta.StringAttribute;
import io.requery.meta.Type;
import io.requery.meta.TypeBuilder;
import io.requery.proxy.BooleanProperty;
import io.requery.proxy.EntityProxy;
import io.requery.proxy.LongProperty;
import io.requery.proxy.Property;
import io.requery.proxy.PropertyState;
import io.requery.util.function.Function;
import io.requery.util.function.Supplier;

@Generated("io.requery.processor.EntityProcessor")
public class Release extends AbstractRelease implements Persistable {
    public static final NumericAttribute<Release, Long> ID = 
    new AttributeBuilder<Release, Long>("id", long.class)
    .setProperty(new LongProperty<Release>() {
        @Override
        public Long get(Release entity) {
            return entity.id;
        }

        @Override
        public void set(Release entity, Long value) {
            entity.id = value;
        }

        @Override
        public long getLong(Release entity) {
            return entity.id;
        }

        @Override
        public void setLong(Release entity, long value) {
            entity.id = value;
        }
    })
    .setPropertyName("id")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$id_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$id_state = value;
        }
    })
    .setKey(true)
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .buildNumeric();

    public static final QueryAttribute<Release, User> AUTHOR = 
    new AttributeBuilder<Release, User>("author", User.class)
    .setProperty(new Property<Release, User>() {
        @Override
        public User get(Release entity) {
            return entity.author;
        }

        @Override
        public void set(Release entity, User value) {
            entity.author = value;
        }
    })
    .setPropertyName("author")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$author_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$author_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .setConverter(new com.fastaccess.data.dao.converters.UserConverter())
    .build();

    public static final QueryAttribute<Release, ReleasesAssetsListModel> ASSETS = 
    new AttributeBuilder<Release, ReleasesAssetsListModel>("assets", ReleasesAssetsListModel.class)
    .setProperty(new Property<Release, ReleasesAssetsListModel>() {
        @Override
        public ReleasesAssetsListModel get(Release entity) {
            return entity.assets;
        }

        @Override
        public void set(Release entity, ReleasesAssetsListModel value) {
            entity.assets = value;
        }
    })
    .setPropertyName("assets")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$assets_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$assets_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .setConverter(new com.fastaccess.data.dao.converters.ReleasesAssetsConverter())
    .build();

    public static final StringAttribute<Release, String> ASSETS_URL = 
    new AttributeBuilder<Release, String>("assetsUrl", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.assetsUrl;
        }

        @Override
        public void set(Release entity, String value) {
            entity.assetsUrl = value;
        }
    })
    .setPropertyName("assetsUrl")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$assetsUrl_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$assetsUrl_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final NumericAttribute<Release, Date> CREATED_AT = 
    new AttributeBuilder<Release, Date>("createdAt", Date.class)
    .setProperty(new Property<Release, Date>() {
        @Override
        public Date get(Release entity) {
            return entity.createdAt;
        }

        @Override
        public void set(Release entity, Date value) {
            entity.createdAt = value;
        }
    })
    .setPropertyName("createdAt")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$createdAt_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$createdAt_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildNumeric();

    public static final StringAttribute<Release, String> TARGET_COMMITISH = 
    new AttributeBuilder<Release, String>("targetCommitish", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.targetCommitish;
        }

        @Override
        public void set(Release entity, String value) {
            entity.targetCommitish = value;
        }
    })
    .setPropertyName("targetCommitish")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$targetCommitish_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$targetCommitish_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> URL = 
    new AttributeBuilder<Release, String>("url", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.url;
        }

        @Override
        public void set(Release entity, String value) {
            entity.url = value;
        }
    })
    .setPropertyName("url")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$url_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$url_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> TAG_NAME = 
    new AttributeBuilder<Release, String>("tagName", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.tagName;
        }

        @Override
        public void set(Release entity, String value) {
            entity.tagName = value;
        }
    })
    .setPropertyName("tagName")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$tagName_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$tagName_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> BODY = 
    new AttributeBuilder<Release, String>("body", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.body;
        }

        @Override
        public void set(Release entity, String value) {
            entity.body = value;
        }
    })
    .setPropertyName("body")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$body_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$body_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> HTML_URL = 
    new AttributeBuilder<Release, String>("htmlUrl", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.htmlUrl;
        }

        @Override
        public void set(Release entity, String value) {
            entity.htmlUrl = value;
        }
    })
    .setPropertyName("htmlUrl")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$htmlUrl_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$htmlUrl_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> NAME = 
    new AttributeBuilder<Release, String>("name", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.name;
        }

        @Override
        public void set(Release entity, String value) {
            entity.name = value;
        }
    })
    .setPropertyName("name")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$name_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$name_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> LOGIN = 
    new AttributeBuilder<Release, String>("login", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.login;
        }

        @Override
        public void set(Release entity, String value) {
            entity.login = value;
        }
    })
    .setPropertyName("login")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$login_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$login_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final NumericAttribute<Release, Date> PUBLISHED_AT = 
    new AttributeBuilder<Release, Date>("publishedAt", Date.class)
    .setProperty(new Property<Release, Date>() {
        @Override
        public Date get(Release entity) {
            return entity.publishedAt;
        }

        @Override
        public void set(Release entity, Date value) {
            entity.publishedAt = value;
        }
    })
    .setPropertyName("publishedAt")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$publishedAt_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$publishedAt_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildNumeric();

    public static final StringAttribute<Release, String> TARBALL_URL = 
    new AttributeBuilder<Release, String>("tarballUrl", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.tarballUrl;
        }

        @Override
        public void set(Release entity, String value) {
            entity.tarballUrl = value;
        }
    })
    .setPropertyName("tarballUrl")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$tarballUrl_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$tarballUrl_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> REPO_ID = 
    new AttributeBuilder<Release, String>("repoId", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.repoId;
        }

        @Override
        public void set(Release entity, String value) {
            entity.repoId = value;
        }
    })
    .setPropertyName("repoId")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$repoId_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$repoId_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final StringAttribute<Release, String> UPLOAD_URL = 
    new AttributeBuilder<Release, String>("uploadUrl", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.uploadUrl;
        }

        @Override
        public void set(Release entity, String value) {
            entity.uploadUrl = value;
        }
    })
    .setPropertyName("uploadUrl")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$uploadUrl_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$uploadUrl_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final QueryAttribute<Release, Boolean> DRAFT = 
    new AttributeBuilder<Release, Boolean>("draft", boolean.class)
    .setProperty(new BooleanProperty<Release>() {
        @Override
        public Boolean get(Release entity) {
            return entity.draft;
        }

        @Override
        public void set(Release entity, Boolean value) {
            entity.draft = value;
        }

        @Override
        public boolean getBoolean(Release entity) {
            return entity.draft;
        }

        @Override
        public void setBoolean(Release entity, boolean value) {
            entity.draft = value;
        }
    })
    .setPropertyName("draft")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$draft_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$draft_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .build();

    public static final QueryAttribute<Release, Boolean> PRE_RELEASE = 
    new AttributeBuilder<Release, Boolean>("preRelease", boolean.class)
    .setProperty(new BooleanProperty<Release>() {
        @Override
        public Boolean get(Release entity) {
            return entity.preRelease;
        }

        @Override
        public void set(Release entity, Boolean value) {
            entity.preRelease = value;
        }

        @Override
        public boolean getBoolean(Release entity) {
            return entity.preRelease;
        }

        @Override
        public void setBoolean(Release entity, boolean value) {
            entity.preRelease = value;
        }
    })
    .setPropertyName("preRelease")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$preRelease_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$preRelease_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .build();

    public static final StringAttribute<Release, String> ZIP_BALL_URL = 
    new AttributeBuilder<Release, String>("zipBallUrl", String.class)
    .setProperty(new Property<Release, String>() {
        @Override
        public String get(Release entity) {
            return entity.zipBallUrl;
        }

        @Override
        public void set(Release entity, String value) {
            entity.zipBallUrl = value;
        }
    })
    .setPropertyName("zipBallUrl")
    .setPropertyState(new Property<Release, PropertyState>() {
        @Override
        public PropertyState get(Release entity) {
            return entity.$zipBallUrl_state;
        }

        @Override
        public void set(Release entity, PropertyState value) {
            entity.$zipBallUrl_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final Type<Release> $TYPE = new TypeBuilder<Release>(Release.class, "release_table")
    .setBaseType(AbstractRelease.class)
    .setCacheable(true)
    .setImmutable(false)
    .setReadOnly(false)
    .setStateless(false)
    .setView(false)
    .setFactory(new Supplier<Release>() {
        @Override
        public Release get() {
            return new Release();
        }
    })
    .setProxyProvider(new Function<Release, EntityProxy<Release>>() {
        @Override
        public EntityProxy<Release> apply(Release entity) {
            return entity.$proxy;
        }
    })
    .addAttribute(ASSETS)
    .addAttribute(TARGET_COMMITISH)
    .addAttribute(REPO_ID)
    .addAttribute(CREATED_AT)
    .addAttribute(DRAFT)
    .addAttribute(PRE_RELEASE)
    .addAttribute(ASSETS_URL)
    .addAttribute(AUTHOR)
    .addAttribute(URL)
    .addAttribute(TAG_NAME)
    .addAttribute(NAME)
    .addAttribute(UPLOAD_URL)
    .addAttribute(PUBLISHED_AT)
    .addAttribute(LOGIN)
    .addAttribute(ID)
    .addAttribute(HTML_URL)
    .addAttribute(BODY)
    .addAttribute(TARBALL_URL)
    .addAttribute(ZIP_BALL_URL)
    .build();

    private PropertyState $id_state;

    private PropertyState $author_state;

    private PropertyState $assets_state;

    private PropertyState $assetsUrl_state;

    private PropertyState $createdAt_state;

    private PropertyState $targetCommitish_state;

    private PropertyState $url_state;

    private PropertyState $tagName_state;

    private PropertyState $body_state;

    private PropertyState $htmlUrl_state;

    private PropertyState $name_state;

    private PropertyState $login_state;

    private PropertyState $publishedAt_state;

    private PropertyState $tarballUrl_state;

    private PropertyState $repoId_state;

    private PropertyState $uploadUrl_state;

    private PropertyState $draft_state;

    private PropertyState $preRelease_state;

    private PropertyState $zipBallUrl_state;

    private final transient EntityProxy<Release> $proxy = new EntityProxy<Release>(this, $TYPE);

    protected Release(Parcel in) {
        super(in);
    }

    public Release() {
    }

    public long getId() {
        return $proxy.get(ID);
    }

    public void setId(long id) {
        $proxy.set(ID, id);
    }

    public User getAuthor() {
        return $proxy.get(AUTHOR);
    }

    public void setAuthor(User author) {
        $proxy.set(AUTHOR, author);
    }

    public ReleasesAssetsListModel getAssets() {
        return $proxy.get(ASSETS);
    }

    public void setAssets(ReleasesAssetsListModel assets) {
        $proxy.set(ASSETS, assets);
    }

    public String getAssetsUrl() {
        return $proxy.get(ASSETS_URL);
    }

    public void setAssetsUrl(String assetsUrl) {
        $proxy.set(ASSETS_URL, assetsUrl);
    }

    public Date getCreatedAt() {
        return $proxy.get(CREATED_AT);
    }

    public void setCreatedAt(Date createdAt) {
        $proxy.set(CREATED_AT, createdAt);
    }

    public String getTargetCommitish() {
        return $proxy.get(TARGET_COMMITISH);
    }

    public void setTargetCommitish(String targetCommitish) {
        $proxy.set(TARGET_COMMITISH, targetCommitish);
    }

    public String getUrl() {
        return $proxy.get(URL);
    }

    public void setUrl(String url) {
        $proxy.set(URL, url);
    }

    public String getTagName() {
        return $proxy.get(TAG_NAME);
    }

    public void setTagName(String tagName) {
        $proxy.set(TAG_NAME, tagName);
    }

    public String getBody() {
        return $proxy.get(BODY);
    }

    public void setBody(String body) {
        $proxy.set(BODY, body);
    }

    public String getHtmlUrl() {
        return $proxy.get(HTML_URL);
    }

    public void setHtmlUrl(String htmlUrl) {
        $proxy.set(HTML_URL, htmlUrl);
    }

    public String getName() {
        return $proxy.get(NAME);
    }

    public void setName(String name) {
        $proxy.set(NAME, name);
    }

    public String getLogin() {
        return $proxy.get(LOGIN);
    }

    public void setLogin(String login) {
        $proxy.set(LOGIN, login);
    }

    public Date getPublishedAt() {
        return $proxy.get(PUBLISHED_AT);
    }

    public void setPublishedAt(Date publishedAt) {
        $proxy.set(PUBLISHED_AT, publishedAt);
    }

    public String getTarballUrl() {
        return $proxy.get(TARBALL_URL);
    }

    public void setTarballUrl(String tarballUrl) {
        $proxy.set(TARBALL_URL, tarballUrl);
    }

    public String getRepoId() {
        return $proxy.get(REPO_ID);
    }

    public void setRepoId(String repoId) {
        $proxy.set(REPO_ID, repoId);
    }

    public String getUploadUrl() {
        return $proxy.get(UPLOAD_URL);
    }

    public void setUploadUrl(String uploadUrl) {
        $proxy.set(UPLOAD_URL, uploadUrl);
    }

    public boolean isDraft() {
        return $proxy.get(DRAFT);
    }

    public void setDraft(boolean draft) {
        $proxy.set(DRAFT, draft);
    }

    public boolean isPreRelease() {
        return $proxy.get(PRE_RELEASE);
    }

    public void setPreRelease(boolean preRelease) {
        $proxy.set(PRE_RELEASE, preRelease);
    }

    public String getZipBallUrl() {
        return $proxy.get(ZIP_BALL_URL);
    }

    public void setZipBallUrl(String zipBallUrl) {
        $proxy.set(ZIP_BALL_URL, zipBallUrl);
    }

    @Override
    public boolean equals(Object obj) {
        return obj instanceof Release && ((Release)obj).$proxy.equals(this.$proxy);
    }

    @Override
    public int hashCode() {
        return $proxy.hashCode();
    }

    @Override
    public String toString() {
        return $proxy.toString();
    }
}
