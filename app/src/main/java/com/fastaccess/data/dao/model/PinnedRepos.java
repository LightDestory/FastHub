// Generated file do not edit, generated by io.requery.processor.EntityProcessor
package com.fastaccess.data.dao.model;

import android.os.Parcel;
import android.os.Parcelable;
import android.os.Parcelable.Creator;
import io.requery.Persistable;
import io.requery.android.EntityParceler;
import io.requery.meta.AttributeBuilder;
import io.requery.meta.NumericAttribute;
import io.requery.meta.QueryAttribute;
import io.requery.meta.StringAttribute;
import io.requery.meta.Type;
import io.requery.meta.TypeBuilder;
import io.requery.proxy.EntityProxy;
import io.requery.proxy.IntProperty;
import io.requery.proxy.LongProperty;
import io.requery.proxy.Property;
import io.requery.proxy.PropertyState;
import io.requery.util.function.Function;
import io.requery.util.function.Supplier;
import java.lang.Integer;
import java.lang.Long;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import javax.annotation.Generated;

@Generated("io.requery.processor.EntityProcessor")
public class PinnedRepos extends AbstractPinnedRepos implements Persistable, Parcelable {
    public static final NumericAttribute<PinnedRepos, Integer> ENTRY_COUNT = 
    new AttributeBuilder<PinnedRepos, Integer>("entryCount", int.class)
    .setProperty(new IntProperty<PinnedRepos>() {
        @Override
        public Integer get(PinnedRepos entity) {
            return entity.entryCount;
        }

        @Override
        public void set(PinnedRepos entity, Integer value) {
            if(value != null) {
                entity.entryCount = value;
            }
        }

        @Override
        public int getInt(PinnedRepos entity) {
            return entity.entryCount;
        }

        @Override
        public void setInt(PinnedRepos entity, int value) {
            entity.entryCount = value;
        }
    })
    .setPropertyName("entryCount")
    .setPropertyState(new Property<PinnedRepos, PropertyState>() {
        @Override
        public PropertyState get(PinnedRepos entity) {
            return entity.$entryCount_state;
        }

        @Override
        public void set(PinnedRepos entity, PropertyState value) {
            entity.$entryCount_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildNumeric();

    public static final StringAttribute<PinnedRepos, String> LOGIN = 
    new AttributeBuilder<PinnedRepos, String>("login", String.class)
    .setProperty(new Property<PinnedRepos, String>() {
        @Override
        public String get(PinnedRepos entity) {
            return entity.login;
        }

        @Override
        public void set(PinnedRepos entity, String value) {
            entity.login = value;
        }
    })
    .setPropertyName("login")
    .setPropertyState(new Property<PinnedRepos, PropertyState>() {
        @Override
        public PropertyState get(PinnedRepos entity) {
            return entity.$login_state;
        }

        @Override
        public void set(PinnedRepos entity, PropertyState value) {
            entity.$login_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final NumericAttribute<PinnedRepos, Long> ID = 
    new AttributeBuilder<PinnedRepos, Long>("id", long.class)
    .setProperty(new LongProperty<PinnedRepos>() {
        @Override
        public Long get(PinnedRepos entity) {
            return entity.id;
        }

        @Override
        public void set(PinnedRepos entity, Long value) {
            entity.id = value;
        }

        @Override
        public long getLong(PinnedRepos entity) {
            return entity.id;
        }

        @Override
        public void setLong(PinnedRepos entity, long value) {
            entity.id = value;
        }
    })
    .setPropertyName("id")
    .setPropertyState(new Property<PinnedRepos, PropertyState>() {
        @Override
        public PropertyState get(PinnedRepos entity) {
            return entity.$id_state;
        }

        @Override
        public void set(PinnedRepos entity, PropertyState value) {
            entity.$id_state = value;
        }
    })
    .setKey(true)
    .setGenerated(true)
    .setReadOnly(true)
    .setLazy(false)
    .setNullable(false)
    .setUnique(false)
    .buildNumeric();

    public static final QueryAttribute<PinnedRepos, Repo> PINNED_REPO = 
    new AttributeBuilder<PinnedRepos, Repo>("pinnedRepo", Repo.class)
    .setProperty(new Property<PinnedRepos, Repo>() {
        @Override
        public Repo get(PinnedRepos entity) {
            return entity.pinnedRepo;
        }

        @Override
        public void set(PinnedRepos entity, Repo value) {
            entity.pinnedRepo = value;
        }
    })
    .setPropertyName("pinnedRepo")
    .setPropertyState(new Property<PinnedRepos, PropertyState>() {
        @Override
        public PropertyState get(PinnedRepos entity) {
            return entity.$pinnedRepo_state;
        }

        @Override
        public void set(PinnedRepos entity, PropertyState value) {
            entity.$pinnedRepo_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .setConverter(new com.fastaccess.data.dao.converters.RepoConverter())
    .build();

    public static final StringAttribute<PinnedRepos, String> REPO_FULL_NAME = 
    new AttributeBuilder<PinnedRepos, String>("repoFullName", String.class)
    .setProperty(new Property<PinnedRepos, String>() {
        @Override
        public String get(PinnedRepos entity) {
            return entity.repoFullName;
        }

        @Override
        public void set(PinnedRepos entity, String value) {
            entity.repoFullName = value;
        }
    })
    .setPropertyName("repoFullName")
    .setPropertyState(new Property<PinnedRepos, PropertyState>() {
        @Override
        public PropertyState get(PinnedRepos entity) {
            return entity.$repoFullName_state;
        }

        @Override
        public void set(PinnedRepos entity, PropertyState value) {
            entity.$repoFullName_state = value;
        }
    })
    .setGenerated(false)
    .setReadOnly(false)
    .setLazy(false)
    .setNullable(true)
    .setUnique(false)
    .buildString();

    public static final Type<PinnedRepos> $TYPE = new TypeBuilder<PinnedRepos>(PinnedRepos.class, "PinnedRepos")
    .setBaseType(AbstractPinnedRepos.class)
    .setCacheable(true)
    .setImmutable(false)
    .setReadOnly(false)
    .setStateless(false)
    .setView(false)
    .setFactory(new Supplier<PinnedRepos>() {
        @Override
        public PinnedRepos get() {
            return new PinnedRepos();
        }
    })
    .setProxyProvider(new Function<PinnedRepos, EntityProxy<PinnedRepos>>() {
        @Override
        public EntityProxy<PinnedRepos> apply(PinnedRepos entity) {
            return entity.$proxy;
        }
    })
    .addAttribute(ENTRY_COUNT)
    .addAttribute(REPO_FULL_NAME)
    .addAttribute(LOGIN)
    .addAttribute(ID)
    .addAttribute(PINNED_REPO)
    .build();

    public static final Creator<PinnedRepos> CREATOR = new Creator<PinnedRepos>() {
        @Override
        public PinnedRepos createFromParcel(Parcel source) {
            return PARCELER.readFromParcel(source);
        }

        @Override
        public PinnedRepos[] newArray(int size) {
            return new PinnedRepos[size];
        }
    };

    static final EntityParceler<PinnedRepos> PARCELER = new EntityParceler<PinnedRepos>($TYPE);

    private PropertyState $entryCount_state;

    private PropertyState $login_state;

    private PropertyState $id_state;

    private PropertyState $pinnedRepo_state;

    private PropertyState $repoFullName_state;

    private final transient EntityProxy<PinnedRepos> $proxy = new EntityProxy<PinnedRepos>(this, $TYPE);

    public PinnedRepos() {
    }

    public int getEntryCount() {
        return $proxy.get(ENTRY_COUNT);
    }

    public void setEntryCount(int entryCount) {
        $proxy.set(ENTRY_COUNT, entryCount);
    }

    public String getLogin() {
        return $proxy.get(LOGIN);
    }

    public void setLogin(String login) {
        $proxy.set(LOGIN, login);
    }

    public long getId() {
        return $proxy.get(ID);
    }

    public Repo getPinnedRepo() {
        return $proxy.get(PINNED_REPO);
    }

    public void setPinnedRepo(Repo pinnedRepo) {
        $proxy.set(PINNED_REPO, pinnedRepo);
    }

    public String getRepoFullName() {
        return $proxy.get(REPO_FULL_NAME);
    }

    public void setRepoFullName(String repoFullName) {
        $proxy.set(REPO_FULL_NAME, repoFullName);
    }

    @Override
    public boolean equals(Object obj) {
        return obj instanceof PinnedRepos && ((PinnedRepos)obj).$proxy.equals(this.$proxy);
    }

    @Override
    public int hashCode() {
        return $proxy.hashCode();
    }

    @Override
    public String toString() {
        return $proxy.toString();
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        PARCELER.writeToParcel(this, dest);
    }
}
